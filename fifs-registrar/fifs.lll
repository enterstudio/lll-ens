;;; ---------------------------------------------------------------------------
;;; @title A registrar that allocates subdomains to the first claimant.
;;; @author Daniel Ellison <daniel@syrinx.net>

(seq

  ;; --------------------------------------------------------------------------
  ;; INIT

  ;; Bring in our macro definitions.
  (include "macros.lll")

  ;; Store the constructor parameters.
  (codecopy 0x00 (bytecodesize) 64)
  (sstore ens-registry @0x00)
  (sstore root-node @0x20)

  ;; --------------------------------------------------------------------------
  ;; CODE

  (returnlll
    (seq

      ;; ----------------------------------------------------------------------
      ;; @notice Registers a name or changes owner of an existing registration.
      ;; @dev Signature: register(bytes32,address)
      ;; @param subnode The hash of the label to register.
      ;; @param owner The address of the new owner.

      (function register-name
        (seq only-subnode-owner

          ;; Define input parameters to this function.
          (def 'subnode (calldataload 0x04))
          (def 'owner (calldataload 0x24))

          ;; Set up the call data.
          (mstore (+ call-data 0x00) (shift-left set-subnode-owner))
          (mstore (+ call-data 0x04) @@root-node)
          (mstore (+ call-data 0x24) subnode)
          (mstore (+ call-data 0x44) owner)

          ;; Call setSubnodeOwner(bytes32,bytes32,address). If the call failed,
          ;; throw an exception.
          (when (= false (call (- (gas) 1000) 0 @@ens-registry
              call-data 100 return-data 0))
            (panic))

          ;; Nothing to return.
          (stop)))

      ;; ----------------------------------------------------------------------
      ;; @notice Fallback: No functions matched the function ID provided.

      (panic)))

)
