;;; ---------------------------------------------------------------------------
;;; @title Macros for the FIFS registrar.
;;; @author Daniel Ellison <daniel@syrinx.net>

(seq

  ;; --------------------------------------------------------------------------
  ;; Constant definitions.

  ;; Required standard library version.
  (def 'required-stdlib "0.1.2")

  ;; Storage layout.
  (def 'ens-registry 0x00) ; Address of ens registry.
  (def 'root-node    0x01) ; Hash of the root node.

  ;; Precomputed function IDs.
  (def 'register-name     0xd22057a9) ; register(bytes32,address)
  (def 'get-node-owner    0x02571be3) ; owner(bytes32)
  (def 'set-subnode-owner 0x06ab5923) ; setSubnodeOwner(bytes32,bytes32,address)

  ;; --------------------------------------------------------------------------
  ;; @notice Checks that the caller is the subnode owner.
  ;; @param subnode Check owner of this subnode.

  (def 'only-subnode-owner (subnode)
    (seq

      ;; Store the components of the node for upcoming sha3.
      (mstore scratch-one @@root-node)
      (mstore scratch-two subnode)

      ;; Call owner(bytes32).
      (mstore return-code (call1 @@ens-registry get-node-owner
          (sha3 scratch-one 64) 32))

      ;; If the call failed or the caller isn't the current subnode owner,
      ;; throw an exception.
      (when (|| (= @return-code false)
                (&& (!= @return-data 0x00)
                    (!= @return-data (caller))))
        (jump invalid-location))))

)
